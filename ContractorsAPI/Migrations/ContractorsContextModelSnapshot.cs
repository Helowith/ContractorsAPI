// <auto-generated />
using ContractorsAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ContractorsAPI.Migrations
{
    [DbContext(typeof(ContractorsContext))]
    partial class ContractorsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ContractorsAPI.Models.Kontrahent", b =>
                {
                    b.Property<int>("KontrahentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NIP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NazwaFirmy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NrKontaBankowego")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KontrahentID");

                    b.ToTable("Kontrahenci");
                });

            modelBuilder.Entity("ContractorsAPI.Models.Oddzial", b =>
                {
                    b.Property<int>("OddzialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("CzyOddzialGlowny")
                        .HasColumnType("bit");

                    b.Property<string>("KodPocztowy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KontrahentID")
                        .HasColumnType("int");

                    b.Property<string>("Kraj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Miasto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NazwaOddzialu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NrBudynku")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ulica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Wojewodztwo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OddzialID");

                    b.HasIndex("KontrahentID");

                    b.ToTable("Oddzialy");
                });

            modelBuilder.Entity("ContractorsAPI.Models.OsobaKontaktowa", b =>
                {
                    b.Property<int>("OsobaKontaktowaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NrTelefonu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OddzialID")
                        .HasColumnType("int");

                    b.HasKey("OsobaKontaktowaID");

                    b.HasIndex("OddzialID");

                    b.ToTable("OsobyKontaktowe");
                });

            modelBuilder.Entity("ContractorsAPI.Models.Oddzial", b =>
                {
                    b.HasOne("ContractorsAPI.Models.Kontrahent", "Kontrahent")
                        .WithMany("Oddzialy")
                        .HasForeignKey("KontrahentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kontrahent");
                });

            modelBuilder.Entity("ContractorsAPI.Models.OsobaKontaktowa", b =>
                {
                    b.HasOne("ContractorsAPI.Models.Oddzial", "Oddzial")
                        .WithMany("OsobyKontaktowe")
                        .HasForeignKey("OddzialID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Oddzial");
                });

            modelBuilder.Entity("ContractorsAPI.Models.Kontrahent", b =>
                {
                    b.Navigation("Oddzialy");
                });

            modelBuilder.Entity("ContractorsAPI.Models.Oddzial", b =>
                {
                    b.Navigation("OsobyKontaktowe");
                });
#pragma warning restore 612, 618
        }
    }
}
